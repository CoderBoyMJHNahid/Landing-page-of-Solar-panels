!function(e) {
    "function" == typeof define && define.amd ? define(["jquery", "../jquery.validate"], e) : "object" == typeof module && module.exports ? module.exports = e(require("jquery")) : e(jQuery)
}((function(e) {
    e.extend(e.validator.methods, {
        over18: function(e, t) {
            var r = !1
              , n = jQuery("#f_ddob").val() || !1
              , a = jQuery("#f_mdob").val() || !1
              , o = jQuery("#f_ydob").val() || !1
              , i = new Date
              , d = new Date;
            return !!(n && a && o) && (i.setFullYear(o, a - 1, n),
            d.setFullYear(d.getFullYear() - 18),
            (r = d > i) && jQuery('input[name="f_age_18"]').prop("checked", !0),
            r)
        },
        titleRequired: function(e) {
            return !!e
        },
        termsConditionsRequired: function(e, t) {
            return jQuery(t).is(":checked") || "1" == jQuery('input[name="b_submit_no_spon"]').val()
        },
        whiteListed: function(t, r) {
            let n = e(r).data("whitelist");
            if (n) {
                const e = t.toLowerCase();
                return n.split("|").some((function(t) {
                    return t.toLowerCase() === e
                }
                ))
            }
            return !0
        },
        termsMkThird: function(e, t) {
            return jQuery(t).is(":checked")
        },
        termsMkGlobal: function(e, t) {
            return jQuery(t).is(":checked")
        },
        email: function(e, t) {
            return this.optional(t) || /^(?!(?:(?:\x22?\x5C[\x00-\x7E]\x22?)|(?:\x22?[^\x5C\x22]\x22?)){255,})(?!(?:(?:\x22?\x5C[\x00-\x7E]\x22?)|(?:\x22?[^\x5C\x22]\x22?)){65,}@)(?:(?:[\x21\x23-\x27\x2A\x2B\x2D\x2F-\x39\x3D\x3F\x5E-\x7E]+)|(?:\x22(?:[\x01-\x08\x0B\x0C\x0E-\x1F\x21\x23-\x5B\x5D-\x7F]|(?:\x5C[\x00-\x7F]))*\x22))(?:\.(?:(?:[\x21\x23-\x27\x2A\x2B\x2D\x2F-\x39\x3D\x3F\x5E-\x7E]+)|(?:\x22(?:[\x01-\x08\x0B\x0C\x0E-\x1F\x21\x23-\x5B\x5D-\x7F]|(?:\x5C[\x00-\x7F]))*\x22)))*@(?:(?:(?!.*[^.]{64,})(?:(?:(?:xn--)?[a-z0-9]+(?:-[a-z0-9]+)*\.){1,126}){1,}(?:(?:[a-z][a-z0-9]*)|(?:(?:xn--)[a-z0-9]+))(?:-[a-z0-9]+)*)|(?:\[(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){7})|(?:(?!(?:.*[a-f0-9][:\]]){7,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,5})?)))|(?:(?:IPv6:(?:(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){5}:)|(?:(?!(?:.*[a-f0-9]:){5,})(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3})?::(?:[a-f0-9]{1,4}(?::[a-f0-9]{1,4}){0,3}:)?)))?(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))(?:\.(?:(?:25[0-5])|(?:2[0-4][0-9])|(?:1[0-9]{2})|(?:[1-9]?[0-9]))){3}))\]))$/i.test(e) && /@([^.]{2,}\.?)+$/.test(e) && /@(?!0)/.test(e) && !/\d{8}/.test(e)
        },
        firstname: function(e, t) {
            return !0
        },
        lastname: function(e, t) {
            return !0
        },
        address: function(e, t) {
            return !0
        },
        addressNumber: function(e, t) {
            return !0
        },
        addressStreet: function(e, t) {
            return !0
        },
        postcode: function(e, t) {
            return /\d{5}/.test(e)
        },
        towncity: function(e, t) {
            return e.length
        },
        mobilePhone: function(e, t) {
            return !0
        },
        streetType: function(e, t) {
            return !0
        },
        notFirstnameInLastname: function(t, r) {
            const n = e('input[name="f_fname"]').val().trim()
              , a = new RegExp("^" + n + "\\b","i");
            return !t.match(a)
        }
    })
}
)),
jQuery.validator.setDefaults({
    ignore: ":hidden, .ignore",
    success: function(e, t) {
        var r = -1 == jQuery.inArray(jQuery(t).attr("name"), ["f_ddob", "f_mdob", "f_ydob"]) ? jQuery(t).attr("id") : "f_age_18";
        jQuery(t).closest(".validated").removeClass("validated-error").addClass("validated-ok"),
        jQuery(".formErrors span." + r).hide("fast", (function() {
            jQuery(this).remove()
        }
        ))
    },
    onkeyup: function(e) {
        var t = window.ffsokuv || [];
        if ($.inArray("all", t) >= 0 || $.inArray(e.name, t) >= 0)
            return !1;
        this.element(e)
    },
    onfocusout: function(e, t) {
        var r = ["f_ddob", "f_mdob", "f_ydob"];
        if ("f_street_type" === e.name)
            return !1;
        if (jQuery.inArray(e.name, r) >= 0) {
            var n = !1;
            if (jQuery.each(r, (function() {
                var e = $('[name="' + this + '"]');
                e.val() ? e.closest(".select").addClass("validated-ok") : n = !0
            }
            )),
            n)
                return !1
        }
        ("" !== e.value.trim() || "text" !== e.type && "email" !== e.type && "tel" !== e.type) && this.element(e)
    },
    showErrors: function() {
        var e = (window.ffsofov || []).length
          , t = this;
        this.numberOfInvalids() || !e ? this.defaultShowErrors() : setTimeout((function() {
            t.defaultShowErrors()
        }
        ), 500)
    },
    errorPlacement: function(e, t) {
        var r = jQuery(t).closest("form").find(".formErrors")
          , n = -1 == jQuery.inArray(t.attr("name"), ["f_ddob", "f_mdob", "f_ydob"]) ? t.attr("id") : "f_age_18";
        if (r.length > 0) {
            var a = jQuery(t).prop("placeholder") || "";
            a.length > 0 && (a = "<b>" + a + "</b>: "),
            a += e.html(),
            r.find("span.error." + n).length < 1 && e.html().length > 1 ? r.append('<span class="collapse error ' + n + '">' + a + "</span>") : r.find("span.error." + n).html(a),
            r.find("span.error." + n).show("slow")
        } else
            e.insertAfter(t)
    },
    highlight: function(e) {
        -1 == jQuery.inArray(jQuery(e).attr("name"), ["f_ddob", "f_mdob", "f_ydob"]) && jQuery(e).attr("id");
        jQuery(e).closest(".validated").removeClass("validated-ok").addClass("validated-error")
    },
    rules: {
        f_title: {
            titleRequired: !0
        },
        f_lname: {
            required: !0,
            lastname: !0,
            notFirstnameInLastname: !0
        },
        f_fname: {
            required: !0,
            firstname: !0
        },
        f_email: {
            required: !0,
            email: !0
        },
        f_terms_conditions: {
            termsConditionsRequired: !0
        },
        f_postcode: window.ffpcta ? {
            required: !0,
            remote: {
                url: "/inc/getPos.php",
                type: "POST",
                data: {
                    h_pt: $("body").data("portal"),
                    h_lg: $("body").data("lang"),
                    h_tkn: $('[name="h_tkn"]').val(),
                    validation: 1
                },
                complete: function(e) {
                    e && "object" == typeof _wg && _wg.pc2add($('[name="f_postcode"]').val())
                }
            }
        } : {
            required: !0,
            postcode: !0
        },
        f_age_18: {
            required: !0
        },
        f_ddob: {
            required: !0,
            over18: !0
        },
        f_mdob: {
            required: !0,
            over18: !0
        },
        f_ydob: {
            required: !0,
            over18: !0
        },
        f_address: {
            required: !0,
            address: !0
        },
        f_add_street: {
            required: !0,
            addressStreet: !0,
            whiteListed: !0
        },
        f_add_number: {
            required: !0,
            addressNumber: !0
        },
        f_county: {
            required: !0,
            minlength: 2,
            maxlength: 30
        },
        f_towncity: {
            required: !0,
            towncity: !0,
            whiteListed: !0
        },
        f_telephone: {
            required: !0,
            mobilePhone: !0
        },
        f_terms_mk_third: {
            termsMkThird: !0
        },
        f_terms_mk_global: {
            termsMkGlobal: !0
        },
        f_street_type: {
            required: !0,
            streetType: !0
        }
    },
    groups: {
        f_age_18: "f_ddob f_mdob f_ydob"
    }
}),
function(e) {
    e.each(e.validator.methods, (function(t, r) {
        e.validator.methods[t] = function() {
            if (arguments.length > 0) {
                var t = e(arguments[1]);
                if ("f_telephone" === t.attr("name"))
                    t.val(t.val().replace(/[\s\-]+/g, ""));
                else if (t.is("input")) {
                    var n = t.attr("type");
                    "text" !== n && "email" !== n && "tel" !== n || t.val(e.trim(t.val()))
                }
            }
            return r.apply(this, arguments)
        }
    }
    ))
}(jQuery);
